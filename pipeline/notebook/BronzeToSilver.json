{
    "name": "BronzeToSilver",
    "properties": {
        "nbformat": 4,
        "nbformat_minor": 2,
        "bigDataPool": {
            "referenceName": "sparkgroup",
            "type": "BigDataPoolReference"
        },
        "sessionProperties": {
            "driverMemory": "56g",
            "driverCores": 8,
            "executorMemory": "56g",
            "executorCores": 8,
            "numExecutors": 2,
            "conf": {
                "spark.dynamicAllocation.enabled": "false",
                "spark.dynamicAllocation.minExecutors": "2",
                "spark.dynamicAllocation.maxExecutors": "2",
                "spark.autotune.trackingId": "7541fbf1-fd1e-4c77-af78-40472cc32802"
            }
        },
        "metadata": {
            "saveOutput": true,
            "enableDebugMode": false,
            "kernelspec": {
                "name": "synapse_pyspark",
                "display_name": "Synapse PySpark"
            },
            "language_info": {
                "name": "python"
            },
            "a365ComputeOptions": {
                "id": "/subscriptions/3667e41b-81d3-482d-bfbd-5016bfc59067/resourceGroups/alexgroup/providers/Microsoft.Synapse/workspaces/alexsynapse00001/bigDataPools/sparkgroup",
                "name": "sparkgroup",
                "type": "Spark",
                "endpoint": "https://alexsynapse00001.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkgroup",
                "auth": {
                    "type": "AAD",
                    "authResource": "https://dev.azuresynapse.net"
                },
                "sparkVersion": "3.1",
                "nodeCount": 10,
                "cores": 8,
                "memory": 56,
                "extraHeader": null
            },
            "sessionKeepAliveTimeout": 30
        },
        "cells": [
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "from notebookutils import mssparkutils\n",
                    "from pyspark.sql.functions import lit"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 30
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "spark.conf.set(\"spark.sql.sources.partitionOverwriteMode\",\"dynamic\")"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 32
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    },
                    "tags": []
                },
                "source": [
                    "a単o = name[0:4]\n",
                    "mes = name[4:6]"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 33
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "account_name = \"alexstorage0003\"\n",
                    "container_name = \"datalake\"\n",
                    "relative_path_in = \"bronze/car_database\"\n",
                    "relative_path_out = \"silver/car_database\"\n",
                    "\n",
                    "adls_path_in = 'abfss://%s@%s.dfs.core.windows.net/%s'%(container_name, account_name, relative_path_in)\n",
                    "adls_path_output = 'abfss://%s@%s.dfs.core.windows.net/%s'%(container_name, account_name, relative_path_out)"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 34
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "dataframe = spark.read.option('header', 'false') \\\n",
                    ".option('delimiter',',') \\\n",
                    ".csv(adls_path_in + f'/{name}')"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 35
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "dataframe = dataframe.withColumnRenamed(\"_c0\",\"placa\")\\\n",
                    "                        .withColumnRenamed(\"_c1\",\"marca\")\\\n",
                    "                        .withColumnRenamed(\"_c2\",\"modelo\")\\\n",
                    "                        .withColumnRenamed(\"_c3\",\"id_cliente\")\\\n",
                    "                        .withColumnRenamed(\"_c4\",\"comuna\")\\\n",
                    "                        .withColumnRenamed(\"_c5\",\"region\")\\\n",
                    "                        .withColumnRenamed(\"_c6\",\"sexo\")\\\n",
                    "                        .withColumnRenamed(\"_c7\",\"actividad\")\\\n",
                    "                        .withColumnRenamed(\"_c8\",\"valor_vehiculo\")\\\n",
                    "                        .withColumnRenamed(\"_c9\",\"fecha_transferencia\")\\\n",
                    "                        .withColumnRenamed(\"_c10\",\"color\")\\\n",
                    "                        .withColumnRenamed(\"_c11\",\"edad\")\\\n",
                    "                        .withColumnRenamed(\"_c12\",\"vigencia\")\\\n",
                    "                        .select(\"*\", lit(f\"{a単o}\").alias(\"a単o\"), lit(f\"{mes}\").alias(\"mes\"))"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 36
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "dataframe.write\\\n",
                    "    .mode('overwrite')\\\n",
                    "    .format(\"avro\")\\\n",
                    "    .partitionBy('a単o', 'mes')\\\n",
                    "    .save(adls_path_output)"
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 37
            },
            {
                "cell_type": "code",
                "metadata": {
                    "jupyter": {
                        "source_hidden": false,
                        "outputs_hidden": false
                    },
                    "nteract": {
                        "transient": {
                            "deleting": false
                        }
                    }
                },
                "source": [
                    "mssparkutils.notebook.exit(1) "
                ],
                "attachments": null,
                "outputs": [],
                "execution_count": 39
            }
        ]
    }
}